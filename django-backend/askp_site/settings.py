"""
Django settings for askp_site project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

from config.config import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Current server configuration version:
ACTUAL_CONFIG_VERSION = [1, 1]

# Check configuration version:
if SERVER_CONFIG['config_version'][0] != ACTUAL_CONFIG_VERSION[0]:
    raise Exception('Your configuration has different primary version: ' +
                    'configuration version = ' +
                    str(SERVER_CONFIG['config_version'][0]) +
                    ', server version = ' +
                    str(ACTUAL_CONFIG_VERSION[0]))
if SERVER_CONFIG['config_version'][1] < ACTUAL_CONFIG_VERSION[1]:
    raise Exception('Your configuration has low secondary version: ' +
                    'configuration version = ' +
                    str(SERVER_CONFIG['config_version'][1]) +
                    ', server version = ' +
                    str(ACTUAL_CONFIG_VERSION[1]))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SERVER_CONFIG['secret_key']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = COMMON_APP_CONFIG['debug']

ALLOWED_HOSTS = SERVER_CONFIG['allowed_hosts']


# Application definition

INSTALLED_APPS = [
    'askp.apps.AskPlatformConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
if COMMON_APP_CONFIG['web_sockets']:
    INSTALLED_APPS.append('channels')
if COMMON_APP_CONFIG['social_auth'] is not None:
    INSTALLED_APPS.extend([
        'django.contrib.sites',
        'allauth',
        'allauth.account',
        'allauth.socialaccount',
    ])
    if COMMON_APP_CONFIG['social_auth']['google']:
        INSTALLED_APPS.append('allauth.socialaccount.providers.google')


SITE_ID = SERVER_CONFIG['site_id']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware', # TODO: https://docs.djangoproject.com/en/dev/ref/csrf/
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'askp_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'askp_site.wsgi.application'


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

#AUTH_PASSWORD_VALIDATORS = [
#    {
#        'NAME':
#        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#    },
#    {
#        'NAME':
#        'django.contrib.auth.password_validation.MinimumLengthValidator',
#    },
#    {
#        'NAME':
#        'django.contrib.auth.password_validation.CommonPasswordValidator',
#    },
#    {
#        'NAME':
#        'django.contrib.auth.password_validation.NumericPasswordValidator',
#    },
#]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'asgi_redis.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('localhost', 6379)],
        },
        'ROUTING': 'askp_site.routing.channel_routing',
    },
}
